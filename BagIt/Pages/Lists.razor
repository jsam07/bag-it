@page "/lists"
@using Models
@using Microsoft.AspNetCore.SignalR.Client
@using System.Text.Json

@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h1 class="text-2xl m-4 font-medium">Shopping Lists</h1>
<div class="rounded-lg bg-gray-200 overflow-hidden shadow divide-y divide-x  divide-gray-200 sm:grid sm:grid-cols-2 sm:gap-px">
     @if (UserLists.Any())
     {
         <div class="bg-white shadow overflow-hidden sm:rounded-md">
             <ul role="list" class="divide-y divide-gray-200">
         @foreach (ShoppingList list in UserLists)
          {
                <li>
                  <div @onclick="() => NavigateToShoppingList(list.ListId)" class="block hover:bg-gray-50">
                    <div class="px-4 py-4 flex items-center sm:px-6">
                      <div class="min-w-0 flex-1 sm:flex sm:items-center sm:justify-between">
                        <div class="truncate">
                          <div class="flex text-sm">
                            <p class="font-medium text-indigo-600 truncate">@list.Name</p>
                          </div>
                          <div class="mt-2 flex">
                            <div class="flex items-center text-sm text-gray-500">
                              <!-- Heroicon name: solid/info -->
                              <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                              </svg>
                              <p>
                                @list.Description
                              </p>
                            </div>
                          </div>
                        </div>
                        <div class="mt-4 flex-shrink-0 sm:mt-0 sm:ml-5">
                          <div class="flex overflow-hidden -space-x-1">
                            <img class="inline-block h-6 w-6 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="Dries Vincent">

                            <img class="inline-block h-6 w-6 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="Lindsay Walton">

                            <img class="inline-block h-6 w-6 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="Courtney Henry">

                            <img class="inline-block h-6 w-6 rounded-full ring-2 ring-white" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="Tom Cook">
                          </div>
                        </div>
                      </div>
                      <div class="ml-5 flex-shrink-0">
                        <!-- Heroicon name: solid/chevron-right -->
                        <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <button type="submit" @onclick="() => NavigateToInvite(list.ListId, list.Name)" class="mx-4 mb-4 flex-shrink-0 px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500">Share List</button>
                </li> 
             }
          </ul>
         </div>
     }
 </div>

<div class="text-center mb-6">
  <svg class="mx-auto mt-16 h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
    <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
  </svg>
  @if (!UserLists.Any())
    {
        <h3 class="mt-2 text-sm font-medium text-gray-900">No Shopping Lists</h3>
    }

  <p class="mt-1 text-sm text-gray-500">Get started by creating a new shopping list.</p>
  <div class="mt-6 inline-flex flex-col">
    <input @bind="NewListInput" required type="text" name="name" id="name" class="my-4 inline-flex items-center px-4 py-2 border-gray-300 rounded-md shadow-sm text-sm font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 placeholder-opacity-25" placeholder="List Name"/>
    <button @onclick="CreateNewList" type="button" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500">
      <!-- Heroicon name: solid/plus -->
      <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
      </svg>
      Create New List
    </button>
  </div>
</div>
@code {

    public string ListToDelete;
    public string NewListInput;
    private HubConnection hubConnection;
    public List<ShoppingList> UserLists = new List<ShoppingList>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            JWToken jwt = await GetTokenAsync();

            if(jwt == null)
            {
                NavigateToLogin();
                return;
            }

            hubConnection = new HubConnectionBuilder()
                .WithUrl($"https://bag-it-api.azurewebsites.net/listHub?access_token={jwt.Token}")
                .Build();

            hubConnection.On<string>("ListsUpdated", (string results) =>
            {
                Console.WriteLine(results);
                UserLists = JsonSerializer.Deserialize<List<ShoppingList>>(results);
                StateHasChanged();
            });

            await hubConnection.StartAsync();
            await hubConnection.InvokeAsync("GetUserLists");
        } catch(Exception e)
        {
            Console.WriteLine("Unable to connect to hub");
            Console.WriteLine(e);
        }
    }

    public void NavigateToLogin()
    {
        NavManager.NavigateTo("/login");
    }

    public void NavigateToShoppingList(int ListId)
    {
        NavManager.NavigateTo($"/userList/{ListId}");
    }

    public void NavigateToInvite(int id, string ListName)
    {
        NavManager.NavigateTo($"/invite/{id}/{ListName}");
    }

    public async Task DeleteItem()
    {
        await hubConnection.InvokeAsync("DeleteItem", ListToDelete);
    }

    public async Task CreateNewList()
    {
        await hubConnection.InvokeAsync("NewList", NewListInput);
    }

    public async Task<JWToken> GetTokenAsync()
    {
        JWToken jwt = await localStorage.GetItemAsync<JWToken>("token");

        if(jwt != null)
        {
            if(jwt.Expiration <= DateTime.UtcNow)
            {
                await localStorage.RemoveItemAsync("token");
                jwt = null;
            }
        }
        return jwt;
    }
}