@page "/invite/{ListId:int}/{ListName}"

@using Models;
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="bg-white my-6 mx-auto shadow sm:rounded-lg max-w-2xl">
    <button type="button" @onclick="NavigateToLists" class="my-4 ml-8 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500">
      <!-- Heroicon name: solid/plus -->
      <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z" clip-rule="evenodd" />
      </svg>
      Back to Lists
    </button>
    <div class="px-4 py-5 sm:p-6">
    <h3 class="text-lg leading-6 font-medium text-gray-900">Invite User to List @ListName</h3>
    <div class="mt-2 max-w-xl text-sm text-gray-500">
        <p>Enter the email address of the user you want to share your list with.</p>
    </div>
    <div class="mt-5 sm:flex sm:items-center">
        <div class="w-full sm:max-w-xs">
        <label for="email" class="sr-only">Email</label>
        <input type="email" @bind="Email" name="email" required id="email" class="shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="you@example.com">
        </div>
        <button type="submit" @onclick="InviteUserToList"  class="mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">Invite</button>
    </div>
    </div>
</div>

@code {
    [Parameter]
    public int ListId{ get; set; }

    [Parameter]
    public string ListName{ get; set; }

    public string Email{ get; set; }

    private async Task InviteUserToList()
    {

        try
        {
            JWToken jwt = await GetTokenAsync();

            if(jwt == null)
            {
                NavigateToLogin();
                return;
            }

            HubConnection hubConnection = new HubConnectionBuilder()
                .WithUrl($"https://bag-it-api.azurewebsites.net/listHub?access_token={jwt.Token}")
                .Build();

            await hubConnection.StartAsync();
            await hubConnection.InvokeAsync("InviteUserToList", ListId, Email);

            NavigateToLists();
        } catch(Exception e)
        {
            Console.WriteLine("Unable to process invite");
            Console.WriteLine(e);
        } 
    }

    public void NavigateToLists()
    {
        NavManager.NavigateTo("/lists");
    }

    public void NavigateToLogin()
    {
        NavManager.NavigateTo("/login");
    }

    public async Task<JWToken> GetTokenAsync()
    {
        JWToken jwt = await localStorage.GetItemAsync<JWToken>("token");

        if(jwt != null)
        {
            if(jwt.Expiration <= DateTime.UtcNow)
            {
                await localStorage.RemoveItemAsync("token");
                jwt = null;
            }
        }
        return jwt;
    }

    
}